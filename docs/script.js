// Generated by Haxe 4.3.0
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var ColStagBoards = function() { };
ColStagBoards.__name__ = true;
ColStagBoards.init = function(keyboards) {
	var add = function(kb) {
		kb.stagger = type_StaggerType.Column;
		keyboards.push(kb);
	};
	var pimoroniSize = 4.4;
	var kb = { name : "Sofle", knobs : type_NumRange.fromInt(2), web : type_ValList.fromValue("https://josefadamcik.github.io/SofleKeyboard/"), source : type_ValList.fromValue("https://github.com/josefadamcik/SofleKeyboard"), kit : [], img : "sofle.jpg"};
	ColStagKeyboard.setMatrix(kb,type_NumRange.fromInt(58),6,4);
	ColStagKeyboard.setExtras(kb,type_NumRange.fromInt(5));
	ColStagKeyboard.setHotswap(kb,[type_SwitchProfile.MX,type_SwitchProfile.Choc],type_KeySpacing.MX);
	ColStagKeyboard.setQMK(kb,[type_Software.VIA,type_Software.Vial]);
	add(kb);
	kb = { name : "Soufflé", pinkyStagger : 0.7, knobs : type_NumRange.fromInt(2), source : type_ValList.fromValue("https://github.com/climent/SouffleKeyboard"), img : "Soufflé.jpg"};
	ColStagKeyboard.setMatrix(kb,type_NumRange.fromInt(58),6,4);
	ColStagKeyboard.setExtras(kb,type_NumRange.fromInt(5),type_NumRange.fromInt(0),type_NumRange.fromInt(0),type_NumRange.fromInt(1));
	ColStagKeyboard.setHotswap(kb,type_ValList.fromValue(type_SwitchProfile.MX));
	ColStagKeyboard.setQMK(kb,[type_Software.VIA,type_Software.Vial]);
	add(kb);
	kb = { name : "Lily58", source : type_ValList.fromValue("https://github.com/kata0510/Lily58"), prebuilt : type_ValList.fromValue("https://shop.yushakobo.jp/products/lily58-pro/"), img : "lily58.jpg"};
	ColStagKeyboard.setMatrix(kb,type_NumRange.fromInt(58),6,4);
	ColStagKeyboard.setExtras(kb,type_NumRange.fromInt(4),type_NumRange.fromInt(1),type_NumRange.fromInt(0),type_NumRange.fromInt(0));
	ColStagKeyboard.setHotswap(kb,[type_SwitchProfile.MX,type_SwitchProfile.Choc],type_KeySpacing.MX);
	add(kb);
	var addEgg = function(kb) {
		ColStagKeyboard.setMatrix(kb,type_NumRange.fromInt(58),6,4);
		kb.thumbKeys = type_NumRange.fromInt(4);
		kb.cornerKeys = type_NumRange.fromInt(4);
		kb.hotswap = type_HotSwap.fromBool(true);
		add(kb);
	};
	addEgg({ name : "Egg58", switchProfile : type_ValList.fromValue(type_SwitchProfile.Choc), connection : type_ValList.fromValue(type_Connection.Wired), firmware : type_ValList.fromValue(type_Firmware.QMK), source : type_ValList.fromValue("https://github.com/eggsworks/egg58"), kit : type_ValList.fromValue("https://eggs.works/products/egg58-diy-kit"), prebuilt : type_ValList.fromValue("https://eggs.works/products/egg58"), img : "egg58.jpg"});
	addEgg({ name : "Egg58bt", switchProfile : type_ValList.fromValue(type_SwitchProfile.Choc), connection : type_ValList.fromValue(type_Connection.Bluetooth), firmware : type_ValList.fromValue(type_Firmware.ZMK), source : type_ValList.fromValue("https://github.com/eggsworks/egg58/blob/master/egg58bt"), img : "egg58bt.jpg"});
	kb = { name : "Dao Choc BLE", thumbKeys : type_NumRange.fromArray([2,3]), connection : [type_Connection.Bluetooth,type_Connection.Wired], source : type_ValList.fromValue("https://github.com/yumagulovrn/dao-choc-ble"), img : "dao-choc-ble.jfif"};
	ColStagKeyboard.setMatrix(kb,type_NumRange.fromArray([42,44]),6,3);
	ColStagKeyboard.setHotswap(kb,type_ValList.fromValue(type_SwitchProfile.Choc),type_KeySpacing.Choc);
	add(kb);
	kb = { name : "Fortitude60", thumbKeys : type_NumRange.fromInt(6), switchProfile : type_ValList.fromValue(type_SwitchProfile.MX), source : type_ValList.fromValue("https://github.com/Pekaso/fortitude60"), kit : type_ValList.fromValue("https://shop.yushakobo.jp/en/products/fortitude60"), img : "Fortitude60.jfif"};
	ColStagKeyboard.setMatrix(kb,type_NumRange.fromInt(60),6,4);
	add(kb);
	var addDilemma = function(kb) {
		kb.stagger = type_StaggerType.Column;
		kb.trackpads = type_NumRange.fromInt(1);
		kb.knobs = type_NumRange.fromArray([0,2]);
		kb.hotswap = type_HotSwap.fromBool(false);
		kb.switchProfile = [type_SwitchProfile.MX,type_SwitchProfile.Choc];
		keyboards.push(kb);
	};
	addDilemma({ name : "Dilemma", keys : type_NumRange.fromArray([34,36]), cols : 5, rows : 3, thumbKeys : type_NumRange.fromArray([2,4]), source : type_ValList.fromValue("https://github.com/Bastardkb/Dilemma"), kit : type_ValList.fromValue("https://bastardkb.com/product/dilemma/"), prebuilt : type_ValList.fromValue("https://bastardkb.com/product/dilemma-prebuilt-preorder/"), img : "Dilemma.jpg"});
	addDilemma({ name : "Dilemma Max", keys : type_NumRange.fromArray([54,56]), cols : 6, rows : 4, thumbKeys : type_NumRange.fromArray([3,4]), source : type_ValList.fromValue("https://github.com/Bastardkb/Dilemma"), kit : type_ValList.fromValue("https://bastardkb.com/product/dilemma-max/"), prebuilt : type_ValList.fromValue("https://bastardkb.com/product/dilemma-max-prebuilt-preorder/"), img : "Dilemma-Max.jpg"});
	kb = { name : "Ursa Minor", img : "ursa-minor.webp", thumbKeys : type_NumRange.fromInt(3), switchProfile : type_ValList.fromValue(type_SwitchProfile.Choc), keySpacing : type_KeySpacing.Choc, assembly : type_ValList.fromValue(type_Assembly.Handwired), source : type_ValList.fromValue("https://github.com/markstory/ursa-minor-keyboard/")};
	ColStagKeyboard.setMatrix(kb,type_NumRange.fromInt(54),6,4);
	add(kb);
	add({ name : "articulation80", keys : type_NumRange.fromArray([56,80]), cols : 6, rows : 4, thumbKeys : type_NumRange.fromInt(4), navCluster : type_NavCluster.Full, switchProfile : type_ValList.fromValue(type_SwitchProfile.Choc), source : type_ValList.fromValue("https://github.com/mylestunglee/articulation80"), img : "articulation80.jpg"});
	add({ name : "3w6", keys : type_NumRange.fromArray([35,36]), cols : 5, rows : 3, thumbKeys : type_NumRange.fromInt(3), trackballs : type_NumRange.fromArray([0,1]), trackballSize : pimoroniSize, switchProfile : type_ValList.fromValue(type_SwitchProfile.Choc), keySpacing : type_KeySpacing.Choc, source : type_ValList.fromValue("https://github.com/weteor/3W6"), img : "3w6_rev2.jpg"});
	add({ name : "CozyKeys Bloomer", keys : type_NumRange.fromInt(87), cols : 6, rows : 5, thumbKeys : type_NumRange.fromInt(5), cornerKeys : type_NumRange.fromInt(6), navCluster : type_NavCluster.Full, switchProfile : type_ValList.fromValue(type_SwitchProfile.MX), source : type_ValList.fromValue("https://github.com/cozykeys/Bloomer"), img : "Bloomer.jfif"});
	add({ name : "Keyclicks W-Ergolite", keys : type_NumRange.fromInt(66), cols : 7, rows : 4, thumbKeys : type_NumRange.fromInt(5), switchProfile : [type_SwitchProfile.MX,type_SwitchProfile.GateronLP], connection : [type_Connection.Bluetooth,type_Connection.Wired], firmware : type_ValList.fromValue(type_Firmware.QMK), software : type_ValList.fromValue(type_Software.Vial), source : type_ValList.fromValue("https://github.com/KeyClicks/Split-Keyboard/tree/main/W-ERGOLITE"), prebuilt : type_ValList.fromValue("https://keyclicks.ca/products/w-ergolite-2-4g-wireless-split-keyboard-2"), img : "W-Ergolite.webp"});
	add({ name : "Tern", keys : type_NumRange.fromInt(30), cols : 5, rows : 3, innerKeys : type_NumRange.fromInt(-1), outerKeys : type_NumRange.fromInt(-1), thumbKeys : type_NumRange.fromInt(2), switchProfile : type_ValList.fromValue(type_SwitchProfile.Choc), keySpacing : type_KeySpacing.CFX, source : type_ValList.fromValue("https://github.com/rschenk/tern"), img : "tern.jpeg"});
};
var ColStagKeyboard = {};
ColStagKeyboard.setMatrix = function(this1,keys,cols,rows) {
	this1.keys = keys;
	this1.cols = cols;
	this1.rows = rows;
};
ColStagKeyboard.setExtras = function(this1,thumbKeys,innerKeys,outerKeys,cornerKeys) {
	this1.thumbKeys = thumbKeys;
	this1.innerKeys = innerKeys;
	this1.outerKeys = outerKeys;
	this1.cornerKeys = cornerKeys;
};
ColStagKeyboard.setHotswap = function(this1,profile,spacing) {
	this1.hotswap = type_HotSwap.fromBool(true);
	this1.switchProfile = profile;
	if(profile == type_ValList.fromValue(type_SwitchProfile.MX) && spacing == null) {
		spacing = type_KeySpacing.MX;
	}
	this1.keySpacing = spacing;
};
ColStagKeyboard.setQMK = function(this1,sw) {
	this1.firmware = type_ValList.fromValue(type_Firmware.QMK);
	this1.software = sw;
};
var table_FancyTable = function() {
	this.sortAscending = false;
	this.sortColHead = null;
	this.rows = [];
	this.header = null;
	this.keyboards = [];
	this.filterOrder = [];
	this.columns = [];
};
table_FancyTable.__name__ = true;
table_FancyTable.prototype = {
	addColumn: function(col) {
		col.table = this;
		this.columns.push(col);
		this.filterOrder.push(table_FancyTableFilterOrder.Column(col));
	}
	,addFilterHeader: function(text) {
		this.filterOrder.push(table_FancyTableFilterOrder.Header(text));
	}
	,buildFilters: function(out) {
		var _gthis = this;
		var _g = 0;
		var _g1 = this.filterOrder;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			var column;
			switch(item._hx_index) {
			case 0:
				var col = item.col;
				column = col;
				break;
			case 1:
				var text = item.text;
				var sh = window.document.createElement("tr");
				var th = window.document.createElement("th");
				th.colSpan = 3;
				th.appendChild(window.document.createTextNode(text));
				sh.appendChild(th);
				out.appendChild(sh);
				continue;
			}
			var column1 = [column];
			var tr = window.document.createElement("tr");
			var td = window.document.createElement("td");
			var cbShow = window.document.createElement("input");
			cbShow.type = "checkbox";
			cbShow.checked = column1[0].show;
			cbShow.onchange = (function(column) {
				return function(_) {
					column[0].show = !column[0].show;
					var _g = 0;
					var _g1 = [];
					var _g2 = 0;
					var _g3 = _gthis.header.cells;
					while(_g2 < _g3.length) {
						var v = _g3[_g2];
						++_g2;
						if(v.column == column[0]) {
							_g1.push(v);
						}
					}
					var _g2 = _g1;
					while(_g < _g2.length) {
						var cell = _g2[_g];
						++_g;
						tools_HtmlTools.setDisplayFlag(cell.element,column[0].show);
					}
					var _g = 0;
					var _g1 = _gthis.rows;
					while(_g < _g1.length) {
						var row = _g1[_g];
						++_g;
						var _g2 = 0;
						var _g3 = [];
						var _g4 = 0;
						var _g5 = row.cells;
						while(_g4 < _g5.length) {
							var v = _g5[_g4];
							++_g4;
							if(v.column == column[0]) {
								_g3.push(v);
							}
						}
						var _g6 = _g3;
						while(_g2 < _g6.length) {
							var cell = _g6[_g2];
							++_g2;
							tools_HtmlTools.setDisplayFlag(cell.element,column[0].show);
						}
					}
				};
			})(column1);
			td.appendChild(cbShow);
			tr.appendChild(td);
			var divFilters = [window.document.createElement("div")];
			column1[0].buildFilter(divFilters[0]);
			tools_HtmlTools.setDisplayFlag(divFilters[0],false);
			divFilters[0].classList.add("filters");
			td = window.document.createElement("td");
			var cbFilter = [window.document.createElement("input")];
			cbFilter[0].type = "checkbox";
			cbFilter[0].checked = false;
			cbFilter[0].disabled = !column1[0].canFilter;
			cbFilter[0].onchange = (function(cbFilter,divFilters,column) {
				return function(_) {
					column[0].wantFilter = cbFilter[0].checked;
					tools_HtmlTools.setDisplayFlag(divFilters[0],cbFilter[0].checked);
					_gthis.updateFilters();
				};
			})(cbFilter,divFilters,column1);
			td.appendChild(cbFilter[0]);
			tr.appendChild(td);
			td = window.document.createElement("td");
			var tmp = column1[0].filterName;
			var title = tmp != null ? tmp : column1[0].name;
			if(column1[0].notes.childNodes.length == 0) {
				td.appendChild(window.document.createTextNode(title));
			} else {
				var details = window.document.createElement("details");
				var summary = window.document.createElement("summary");
				summary.appendChild(window.document.createTextNode(title));
				details.appendChild(summary);
				details.appendChild(column1[0].notes);
				details.classList.add("notes");
				td.appendChild(details);
			}
			td.appendChild(divFilters[0]);
			tr.appendChild(td);
			out.appendChild(tr);
		}
	}
	,buildTable: function(out) {
		var _gthis = this;
		this.header = new table_FancyTableRow(null);
		var _g = 0;
		var _g1 = this.columns;
		while(_g < _g1.length) {
			var column = _g1[_g];
			++_g;
			var cell = [new table_FancyTableHeaderCell(column)];
			tools_HtmlTools.setDisplayFlag(cell[0].element,column.show);
			if(column.shortName != null) {
				var text = column.shortName;
				cell[0].element.appendChild(window.document.createTextNode(text));
				cell[0].element.title = column.name;
			} else {
				var text1 = column.name;
				cell[0].element.appendChild(window.document.createTextNode(text1));
			}
			if(column.canSort) {
				cell[0].element.classList.add("can-sort");
				var sfx = "Can sort";
				if(cell[0].element.title != null) {
					cell[0].element.title += "\n" + sfx;
				} else {
					cell[0].element.title = sfx;
				}
				cell[0].element.onclick = (function(cell) {
					return function(_) {
						if(_gthis.sortColHead != cell[0]) {
							if(_gthis.sortColHead != null) {
								_gthis.sortColHead.element.classList.remove("sort-column");
								_gthis.sortColHead.element.classList.remove("sort-ascending");
							}
							_gthis.sortAscending = false;
							_gthis.sortColHead = cell[0];
							_gthis.sortColHead.element.classList.add("sort-column");
						} else {
							_gthis.sortAscending = !_gthis.sortAscending;
							tools_HtmlTools.setTokenFlag(_gthis.sortColHead.element.classList,"sort-ascending",_gthis.sortAscending);
						}
						var sortRows = _gthis.rows.slice();
						var sortColumn = _gthis.sortColHead.column;
						sortRows.sort((function() {
							return function(a,b) {
								return sortColumn.compareKeyboards(a.keyboard,b.keyboard,_gthis.sortAscending);
							};
						})());
						sortRows.reverse();
						var _g = 0;
						while(_g < sortRows.length) {
							var row = sortRows[_g];
							++_g;
							_gthis.header.element.after(row.element);
						}
					};
				})(cell);
			}
			this.header.cells.push(cell[0]);
			this.header.element.appendChild(cell[0].element);
		}
		out.appendChild(this.header.element);
		var _g = 0;
		var _g1 = this.keyboards;
		while(_g < _g1.length) {
			var keyboard = _g1[_g];
			++_g;
			var row = new table_FancyTableRow(keyboard);
			var _g2 = 0;
			var _g3 = this.columns;
			while(_g2 < _g3.length) {
				var column = _g3[_g2];
				++_g2;
				var cell1 = new table_FancyTableCell(column);
				tools_HtmlTools.setDisplayFlag(cell1.element,column.show);
				column.buildValue(cell1.element,keyboard);
				row.cells.push(cell1);
				row.element.appendChild(cell1.element);
			}
			this.rows.push(row);
			out.appendChild(row.element);
		}
	}
	,updateFilters: function() {
		var _g = 0;
		var _g1 = this.rows;
		while(_g < _g1.length) {
			var row = _g1[_g];
			++_g;
			var keyboard = row.keyboard;
			var show = true;
			var _g2 = 0;
			var _g3 = this.columns;
			while(_g2 < _g3.length) {
				var column = _g3[_g2];
				++_g2;
				if(column.wantFilter) {
					if(column.matchesFilter(keyboard)) {
						continue;
					}
					show = false;
					break;
				}
			}
			tools_HtmlTools.setDisplayFlag(row.element,show);
		}
	}
};
var ColStagTable = function() {
	table_FancyTable.call(this);
	var kb = null;
	this.initGeneral(kb);
	this.initSwitch(kb);
	this.initCuriosities(kb);
	this.initLinks(kb);
	var col;
	ColStagBoards.init(this.keyboards);
};
ColStagTable.__name__ = true;
ColStagTable.__super__ = table_FancyTable;
ColStagTable.prototype = $extend(table_FancyTable.prototype,{
	initGeneral: function(kb) {
		this.addColumn(new table_FancyTableNameColumn("Name",function(q) {
			return q.name;
		}));
		this.addFilterHeader("General");
		var staggerType = new table_FancyTableTagColumn("Stagger type",function(q) {
			return q.stagger;
		},type_StaggerType);
		staggerType.shortName = "Stag";
		staggerType.filterLabels.set(type_StaggerType.Column,"Columnar");
		staggerType.filterLabels.set(type_StaggerType.Ortho,"Ortholinear");
		staggerType.shortLabels.set(type_StaggerType.Column,"Col");
		staggerType.shortLabels.set(type_StaggerType.Ortho,"OL");
		var conType = new table_FancyTableTagListColumn("Connection",function(q) {
			return q.connection;
		},type_Connection);
		conType.shortName = "Con";
		conType.shortLabels.set(type_Connection.Wired,"W");
		conType.shortLabels.set(type_Connection.Bluetooth,"BT");
		conType.shortLabels.set(type_Connection.Proprietary,"P");
		this.addColumn(conType);
		var col = new table_FancyTableIntRangeColumn("Key count",function(q) {
			return q.keys;
		});
		this.addColumn(col);
		col.shortName = "#keys";
		this.addColumn(new table_FancyTableIntColumn("Rows",function(q) {
			return q.rows;
		}));
		col = new table_FancyTableIntColumn("Columns",function(q) {
			return q.cols;
		});
		this.addColumn(col);
		col.shortName = "Cols";
		col = new table_FancyTableIntRangeColumn("Thumb keys",function(q) {
			return q.thumbKeys;
		});
		this.addColumn(col);
		col.shortName = "#thumb";
		col.notes.appendChild(window.document.createTextNode("Keys below and in the middle of main area of keyboard."));
		col.notes.appendChild(window.document.createElement("br"));
		col.notes.appendChild(window.document.createTextNode("For keyboards with a wide bottom row, the keys under the inner-most 4 columns are considered to be thumb-accessible."));
		col.notes.appendChild(window.document.createElement("br"));
		col.notes.appendChild(window.document.createTextNode("For ortholinear keyboards, thumb keys are the ones poking out of the rectangle"));
		col = new table_FancyTableIntRangeColumn("Inner keys",function(q) {
			return q.innerKeys;
		});
		this.addColumn(col);
		col.shortName = "#inner";
		col.show = false;
		col.notes.appendChild(window.document.createTextNode("Keys located at the edges between keyboard halves."));
		col.notes.appendChild(window.document.createElement("br"));
		col.notes.appendChild(window.document.createTextNode("Often used for brackets or other half-common keys."));
		col.notes.appendChild(window.document.createElement("br"));
		col.notes.appendChild(window.document.createTextNode("If a keyboard is missing a key on the inner main-area row (such as 'hummingbird' keyboards do), this can be negative."));
		col = new table_FancyTableIntRangeColumn("Outer keys",function(q) {
			return q.outerKeys;
		});
		this.addColumn(col);
		col.shortName = "#outer";
		col.show = false;
		col.notes.appendChild(window.document.createTextNode("Sometimes a keyboard has a key or two hanging outside the outer edges."));
		col.notes.appendChild(window.document.createElement("br"));
		col.notes.appendChild(window.document.createTextNode("If a keyboard is missing a key on the edge rows, this can be negative."));
		col = new table_FancyTableIntRangeColumn("Corner keys",function(q) {
			return q.cornerKeys;
		});
		this.addColumn(col);
		col.shortName = "#corner";
		col.show = false;
		col.notes.appendChild(window.document.createTextNode("If a keyboard has keys in bottom-left/bottom-right corners below the main area, this is a number of such keys that are positioned in a convenient row."));
		col.notes.appendChild(window.document.createElement("br"));
		col.notes.appendChild(window.document.createTextNode("Handy for modifiers or 65%-style arrow keys."));
		col = new table_FancyTableFloatColumn("Pinky stagger",function(q) {
			return q.pinkyStagger;
		});
		this.addColumn(col);
		col.show = false;
		col.shortName = "pkStag";
		col.notes.appendChild(window.document.createTextNode("Stagger between pinky finger column(s) and the ring finger column, "));
		col.notes.appendChild(window.document.createElement("br"));
		col.notes.appendChild(window.document.createTextNode("This is generally rather approximate"));
		var navCluster = new table_FancyTableTagColumn("Navigation cluster",function(q) {
			return q.navCluster;
		},type_NavCluster);
		col.show = false;
		navCluster.shortName = "nav";
		navCluster.shortLabels.set(type_NavCluster.None,"");
		this.addColumn(navCluster);
	}
	,initSwitch: function(kb) {
		this.addFilterHeader("Switches and keycaps");
		var hotswap = new table_FancyTableTagColumn("Hot-swappable switches",function(q) {
			return q.hotswap;
		},type_HotSwapBase);
		hotswap.shortName = "hs";
		hotswap.shortLabels.set(type_HotSwapBase.Unspecified,"");
		hotswap.shortLabels.set(type_HotSwapBase.Yes,"+");
		hotswap.shortLabels.set(type_HotSwapBase.No,"-");
		this.addColumn(hotswap);
		var switchType = new table_FancyTableTagListColumn("Switch profile",function(q) {
			return q.switchProfile;
		},type_SwitchProfile);
		switchType.shortName = "SwP";
		switchType.filterLabels.set(type_SwitchProfile.Choc,"Kailh Choc V1");
		switchType.filterLabels.set(type_SwitchProfile.GateronLP,"Gateron low-profile");
		switchType.shortLabels.set(type_SwitchProfile.GateronLP,"GLP");
		this.addColumn(switchType);
		var switchForce = new table_FancyTableIntListColumn("Switch actuation force (if not hotswap)",function(q) {
			return q.switchForce;
		});
		switchForce.shortName = "gf";
		switchForce.nullCaption = "*";
		switchForce.filterIncludeNullLabel = "Include keyboards with hotswap switches";
		this.addColumn(switchForce);
		var switchKind = new table_FancyTableTagListColumn("Switch feel (if not hotswap)",function(q) {
			return q.switchKind;
		},type_SwitchKind);
		switchKind.defaultValue = null;
		switchKind.shortName = "SwF";
		switchKind.shortLabels.set(type_SwitchKind.Linear,"L");
		switchKind.shortLabels.set(type_SwitchKind.Tactile,"T");
		switchKind.shortLabels.set(type_SwitchKind.Clicky,"C");
		switchKind.shortLabels.set(type_SwitchKind.Optic,"O");
		switchKind.shortLabels.set(type_SwitchKind.Other,"#");
		switchKind.nullCaption = "*";
		this.addColumn(switchKind);
		var colSpacing = new table_FancyTableTagColumn("Key spacing",function(q) {
			return q.keySpacing;
		},type_KeySpacing);
		colSpacing.shortName = "kSp";
		colSpacing.show = false;
		colSpacing.filterLabels.set(type_KeySpacing.MX,"MX (19mm x 19mm)");
		colSpacing.filterLabels.set(type_KeySpacing.Choc,"Choc (18mm x 17mm)");
		colSpacing.filterLabels.set(type_KeySpacing.CFX,"CFX (17mm x 17mm)");
		colSpacing.shortLabels.set(type_KeySpacing.Unknown,"?");
		this.addColumn(colSpacing);
	}
	,initCuriosities: function(kb) {
		this.addFilterHeader("Other curiosities");
		var col = new table_FancyTableIntRangeColumn("Encoders",function(q) {
			return q.knobs;
		});
		this.addColumn(col);
		col.shortName = "Knobs";
		col = new table_FancyTableIntRangeColumn("Trackballs",function(q) {
			return q.trackballs;
		});
		this.addColumn(col);
		col.show = false;
		col = new table_FancyTableIntRangeColumn("Trackpads",function(q) {
			return q.trackpads;
		});
		this.addColumn(col);
		col.show = false;
		var asm = new table_FancyTableTagListColumn("Assembly specifics",function(q) {
			return q.assembly;
		},type_Assembly);
		asm.defaultValue = [];
		asm.shortName = "Assembly";
		asm.show = false;
		this.addColumn(asm);
	}
	,initLinks: function(kb) {
		this.addFilterHeader("Links");
		var lc = new table_FancyTableLinkListColumn("Website",function(q) {
			return q.web;
		});
		this.addColumn(lc);
		lc.shortName = "web";
		lc = new table_FancyTableLinkListColumn("Open-source",function(q) {
			return q.source;
		});
		this.addColumn(lc);
		lc.shortName = "OSH";
		lc = new table_FancyTableLinkListColumn("Kits",function(q) {
			return q.kit;
		});
		this.addColumn(lc);
		lc.shortName = "Kit";
		lc = new table_FancyTableLinkListColumn("Pre-built",function(q) {
			return q.prebuilt;
		});
		this.addColumn(lc);
		lc.shortName = "PB";
	}
});
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.now = function() {
	return Date.now();
};
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	var t = new ColStagTable();
	t.buildFilters(window.document.querySelector("#filter"));
	t.buildTable(window.document.querySelector("#data"));
};
Math.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( _g ) {
		return null;
	}
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var Type = function() { };
Type.__name__ = true;
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw haxe_Exception.thrown("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw haxe_Exception.thrown("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw haxe_Exception.thrown("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.createEnumIndex = function(e,index,params) {
	var c;
	var _g = e.__constructs__[index];
	if(_g == null) {
		c = null;
	} else {
		var ctor = _g;
		c = ctor._hx_name;
	}
	if(c == null) {
		throw haxe_Exception.thrown(index + " is not a valid enum constructor index");
	}
	return Type.createEnum(e,c,params);
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var params = enm.__constructs__[e._hx_index].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
var externs_TippyOptions = {};
externs_TippyOptions._new = function() {
	var this1 = { };
	this1["theme"] = "translucent";
	return this1;
};
externs_TippyOptions.bind = function(this1,el) {
	Tippy(el,this1);
};
externs_TippyOptions.setHoverOnly = function(this1,fn) {
	this1["onShow"] = fn;
	this1["touch"] = false;
};
externs_TippyOptions.setClickTap = function(this1,click,tap,wantClick) {
	this1["trigger"] = "click";
	var _tap = tap;
	var block = false;
	if(click == null) {
		click = function(t,e) {
		};
	}
	if(tap == null) {
		tap = function(t) {
		};
	}
	if(wantClick == null) {
		wantClick = function(t,e) {
			return !Tippy["currentInput"]["isTouch"];
		};
	}
	var v = function(t,e) {
		block = wantClick(t,e);
		if(!block) {
			return;
		}
		click(t,e);
	};
	this1["onTrigger"] = v;
	var v = function(t) {
		if(block) {
			return false;
		}
		var val = _tap(t);
		if(val != null) {
			return val;
		} else {
			return true;
		}
	};
	this1["onShow"] = v;
};
externs_TippyOptions._preventDefault = function(t,e) {
	e.preventDefault();
};
externs_TippyOptions.setContextMenu = function(this1,show) {
	this1["trigger"] = "contextmenu";
	var v = externs_TippyOptions._preventDefault;
	this1["onTrigger"] = v;
	this1["onShow"] = show;
};
externs_TippyOptions._body = function() {
	return window.document.body;
};
externs_TippyOptions.setInteractiveSafe = function(this1) {
	this1["interactive"] = true;
	var v = externs_TippyOptions._body;
	this1["appendTo"] = v;
};
externs_TippyOptions.get_theme = function(this1) {
	return this1["theme"];
};
externs_TippyOptions.set_theme = function(this1,v) {
	this1["theme"] = v;
	return v;
};
externs_TippyOptions.get_interactive = function(this1) {
	return this1["interactive"];
};
externs_TippyOptions.set_interactive = function(this1,v) {
	this1["interactive"] = v;
	return v;
};
externs_TippyOptions.get_content = function(this1) {
	return this1["content"];
};
externs_TippyOptions.set_content = function(this1,v) {
	this1["content"] = v;
	return v;
};
externs_TippyOptions.get_trigger = function(this1) {
	return this1["trigger"];
};
externs_TippyOptions.set_trigger = function(this1,v) {
	this1["trigger"] = v;
	return v;
};
externs_TippyOptions.get_touch = function(this1) {
	return this1["touch"];
};
externs_TippyOptions.set_touch = function(this1,v) {
	this1["touch"] = v;
	return v;
};
externs_TippyOptions.get_onTrigger = function(this1) {
	return this1["onTrigger"];
};
externs_TippyOptions.set_onTrigger = function(this1,v) {
	this1["onTrigger"] = v;
	return v;
};
externs_TippyOptions.get_onShow = function(this1) {
	return this1["onShow"];
};
externs_TippyOptions.set_onShow = function(this1,v) {
	this1["onShow"] = v;
	return v;
};
externs_TippyOptions.get_placement = function(this1) {
	return this1["placement"];
};
externs_TippyOptions.set_placement = function(this1,v) {
	this1["placement"] = v;
	return v;
};
externs_TippyOptions.get_maxWidth = function(this1) {
	return this1["maxWidth"];
};
externs_TippyOptions.set_maxWidth = function(this1,v) {
	this1["maxWidth"] = v;
	return v;
};
externs_TippyOptions.get_appendTo = function(this1) {
	return this1["appendTo"];
};
externs_TippyOptions.set_appendTo = function(this1,v) {
	this1["appendTo"] = v;
	return v;
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
haxe_Exception.__name__ = true;
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	unwrap: function() {
		return this.__nativeException;
	}
	,get_native: function() {
		return this.__nativeException;
	}
});
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
haxe_ValueException.__name__ = true;
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	unwrap: function() {
		return this.value;
	}
});
var haxe_ds_BalancedTree = function() {
};
haxe_ds_BalancedTree.__name__ = true;
haxe_ds_BalancedTree.prototype = {
	set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this = r.right;
			var _this1 = r.left;
			if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this = this.left;
			tmp = _this == null ? 0 : _this._height;
		} else {
			var _this = this.right;
			tmp = _this == null ? 0 : _this._height;
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
haxe_ds_TreeNode.__name__ = true;
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
haxe_ds_EnumValueMap.__name__ = true;
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1._hx_index - k2._hx_index;
		if(d != 0) {
			return d;
		}
		var p1 = Type.enumParameters(k1);
		var p2 = Type.enumParameters(k2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g = 0;
		var _g1 = a1.length;
		while(_g < _g1) {
			var i = _g++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if(((v1) instanceof Array) && ((v2) instanceof Array)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
});
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var con = e.__constructs__[o._hx_index];
			var n = con._hx_name;
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var table_FancyTableFilterOrder = $hxEnums["table.FancyTableFilterOrder"] = { __ename__:true,__constructs__:null
	,Column: ($_=function(col) { return {_hx_index:0,col:col,__enum__:"table.FancyTableFilterOrder",toString:$estr}; },$_._hx_name="Column",$_.__params__ = ["col"],$_)
	,Header: ($_=function(text) { return {_hx_index:1,text:text,__enum__:"table.FancyTableFilterOrder",toString:$estr}; },$_._hx_name="Header",$_.__params__ = ["text"],$_)
};
table_FancyTableFilterOrder.__constructs__ = [table_FancyTableFilterOrder.Column,table_FancyTableFilterOrder.Header];
var table_FancyTableColumn = function(name) {
	this.canSort = false;
	this.nullCaption = "";
	this.filterPrefix = null;
	this.wantFilter = false;
	this.canFilter = true;
	this.show = true;
	this.notes = null;
	this.shortName = null;
	this.filterName = null;
	this.table = null;
	this.name = name;
	this.notes = window.document.createElement("div");
};
table_FancyTableColumn.__name__ = true;
table_FancyTableColumn.prototype = {
	buildValue: function(out,kb) {
	}
	,buildFilter: function(out) {
	}
	,matchesFilter: function(kb) {
		return true;
	}
	,compareKeyboards: function(a,b,ascending) {
		return 0;
	}
};
var table_FancyTableEnumColumn = function(name,et) {
	this.filterMode = table_FancyTableTagFilterMode.AnyOf;
	this.isMulti = false;
	this.filterTags = [];
	this.shortLabels = new haxe_ds_EnumValueMap();
	this.filterLabels = new haxe_ds_EnumValueMap();
	table_FancyTableColumn.call(this,name);
	this.type = et;
};
table_FancyTableEnumColumn.__name__ = true;
table_FancyTableEnumColumn.__super__ = table_FancyTableColumn;
table_FancyTableEnumColumn.prototype = $extend(table_FancyTableColumn.prototype,{
	buildFilter: function(out) {
		var _gthis = this;
		var modeSelect = window.document.createElement("select");
		var _g = 0;
		var _this = table_FancyTableTagFilterMode.__constructs__;
		var result = new Array(_this.length);
		var _g1 = 0;
		var _g2 = _this.length;
		while(_g1 < _g2) {
			var i = _g1++;
			result[i] = _this[i]._hx_name;
		}
		var _g1 = result;
		while(_g < _g1.length) {
			var ctr = _g1[_g];
			++_g;
			var val = Type.createEnum(table_FancyTableTagFilterMode,ctr,null);
			var name;
			switch(val._hx_index) {
			case 0:
				name = "Any of these";
				break;
			case 1:
				if(!this.isMulti) {
					continue;
				}
				name = "All of these";
				break;
			case 2:
				name = "None of these";
				break;
			}
			var opt = window.document.createElement("option");
			opt.value = ctr;
			opt.appendChild(window.document.createTextNode(name));
			if(val == table_FancyTableTagFilterMode.AnyOf) {
				opt.selected = true;
			}
			modeSelect.appendChild(opt);
		}
		modeSelect.onchange = function(_) {
			var old = _gthis.filterMode;
			var tmp = Type.createEnum(table_FancyTableTagFilterMode,modeSelect.value,null);
			_gthis.filterMode = tmp != null ? tmp : table_FancyTableTagFilterMode.AnyOf;
			if(old != _gthis.filterMode) {
				_gthis.table.updateFilters();
			}
		};
		out.appendChild(modeSelect);
		var _g = 0;
		var _this = this.type.__constructs__;
		var result = new Array(_this.length);
		var _g1 = 0;
		var _g2 = _this.length;
		while(_g1 < _g2) {
			var i = _g1++;
			result[i] = _this[i]._hx_name;
		}
		var _g1 = result;
		while(_g < _g1.length) {
			var ctr = _g1[_g];
			++_g;
			var val = [Type.createEnum(this.type,ctr)];
			var tmp = this.filterLabels.get(val[0]);
			var name = tmp != null ? tmp : ctr;
			var cb = [tools_HtmlTools.createCheckboxElement(window.document)];
			cb[0].onchange = (function(cb,val) {
				return function(_) {
					if(cb[0].checked) {
						if(_gthis.filterTags.indexOf(val[0]) == -1) {
							_gthis.filterTags.push(val[0]);
							_gthis.table.updateFilters();
						}
					} else if(HxOverrides.remove(_gthis.filterTags,val[0])) {
						_gthis.table.updateFilters();
					}
				};
			})(cb,val);
			var lb = window.document.createElement("label");
			lb.appendChild(cb[0]);
			lb.appendChild(window.document.createTextNode(name));
			var div = window.document.createElement("div");
			div.appendChild(lb);
			out.appendChild(div);
		}
	}
});
var table_FancyTableTagColumn = function(name,getter,et) {
	this.defaultValue = null;
	table_FancyTableEnumColumn.call(this,name,et);
	this.defaultValue = Type.createEnumIndex(et,0,null);
	this.getter = getter;
	this.type = et;
};
table_FancyTableTagColumn.__name__ = true;
table_FancyTableTagColumn.__super__ = table_FancyTableEnumColumn;
table_FancyTableTagColumn.prototype = $extend(table_FancyTableEnumColumn.prototype,{
	getValue: function(kb) {
		var tmp = this.getter(kb);
		if(tmp != null) {
			return tmp;
		} else {
			return this.defaultValue;
		}
	}
	,buildValue: function(out,kb) {
		var val = this.getValue(kb);
		if(val != null) {
			var name = $hxEnums[val.__enum__].__constructs__[val._hx_index]._hx_name;
			var tmp = this.shortLabels.get(val);
			out.appendChild(window.document.createTextNode(tmp != null ? tmp : name));
			var kb1 = kb.name;
			var tmp = this.name + ":";
			var tmp1 = this.filterLabels.get(val);
			out.title = [kb1,tmp,tmp1 != null ? tmp1 : name].join("\n");
		} else {
			var text = this.nullCaption;
			out.appendChild(window.document.createTextNode(text));
		}
	}
	,matchesFilter: function(kb) {
		if(this.filterTags.length == 0) {
			return true;
		}
		var val = this.getValue(kb);
		switch(this.filterMode._hx_index) {
		case 0:
			return this.filterTags.indexOf(val) != -1;
		case 2:
			return this.filterTags.indexOf(val) == -1;
		default:
			return true;
		}
	}
});
var table_FancyTableTagListColumn = function(name,getter,et) {
	this.defaultValue = null;
	table_FancyTableEnumColumn.call(this,name,et);
	this.defaultValue = type_ValList.fromValue(Type.createEnumIndex(et,0,null));
	this.getter = getter;
	this.type = et;
};
table_FancyTableTagListColumn.__name__ = true;
table_FancyTableTagListColumn.__super__ = table_FancyTableEnumColumn;
table_FancyTableTagListColumn.prototype = $extend(table_FancyTableEnumColumn.prototype,{
	getValue: function(kb) {
		var tmp = this.getter(kb);
		if(tmp != null) {
			return tmp;
		} else {
			return this.defaultValue;
		}
	}
	,buildValue: function(out,kb) {
		var vals = this.getValue(kb);
		if(vals != null) {
			var tip = [kb.name,this.name + ":"];
			var _g_current = 0;
			var _g_array = vals;
			while(_g_current < _g_array.length) {
				var _g_value = _g_array[_g_current];
				var _g_key = _g_current++;
				var i = _g_key;
				var val = _g_value;
				if(i > 0) {
					out.appendChild(window.document.createTextNode(", "));
				}
				var name = $hxEnums[val.__enum__].__constructs__[val._hx_index]._hx_name;
				var tmp = this.shortLabels.get(val);
				out.appendChild(window.document.createTextNode(tmp != null ? tmp : name));
				var tmp1 = this.filterLabels.get(val);
				tip.push("· " + (tmp1 != null ? tmp1 : name));
			}
			out.title = tip.join("\n");
		} else {
			var text = this.nullCaption;
			out.appendChild(window.document.createTextNode(text));
		}
	}
	,matchesFilter: function(kb) {
		if(this.filterTags.length == 0) {
			return true;
		}
		var vals = this.getValue(kb);
		if(vals == null) {
			vals = this.defaultValue;
			if(vals == null) {
				vals = [];
			}
		}
		switch(this.filterMode._hx_index) {
		case 0:
			var _g = 0;
			var _g1 = vals;
			while(_g < _g1.length) {
				var val = _g1[_g];
				++_g;
				if(this.filterTags.indexOf(val) != -1) {
					return true;
				}
			}
			return false;
		case 1:
			var _g = 0;
			var _g1 = vals;
			while(_g < _g1.length) {
				var val = _g1[_g];
				++_g;
				if(this.filterTags.indexOf(val) == -1) {
					return false;
				}
			}
			return true;
		case 2:
			var _g = 0;
			var _g1 = vals;
			while(_g < _g1.length) {
				var val = _g1[_g];
				++_g;
				if(this.filterTags.indexOf(val) != -1) {
					return false;
				}
			}
			return true;
		}
	}
});
var table_FancyTableTagFilterMode = $hxEnums["table.FancyTableTagFilterMode"] = { __ename__:true,__constructs__:null
	,AnyOf: {_hx_name:"AnyOf",_hx_index:0,__enum__:"table.FancyTableTagFilterMode",toString:$estr}
	,AllOf: {_hx_name:"AllOf",_hx_index:1,__enum__:"table.FancyTableTagFilterMode",toString:$estr}
	,NoneOf: {_hx_name:"NoneOf",_hx_index:2,__enum__:"table.FancyTableTagFilterMode",toString:$estr}
};
table_FancyTableTagFilterMode.__constructs__ = [table_FancyTableTagFilterMode.AnyOf,table_FancyTableTagFilterMode.AllOf,table_FancyTableTagFilterMode.NoneOf];
var table_FancyTableNumberColumnBase = function(name) {
	this.filterIncludeNullLabel = null;
	this.filterIncludeNull = false;
	this.filterMax = null;
	this.filterMin = null;
	table_FancyTableColumn.call(this,name);
	this.canSort = true;
};
table_FancyTableNumberColumnBase.__name__ = true;
table_FancyTableNumberColumnBase.__super__ = table_FancyTableColumn;
table_FancyTableNumberColumnBase.prototype = $extend(table_FancyTableColumn.prototype,{
	parseFilterValue: function(val) {
		return null;
	}
	,getKnownRange: function(keyboards) {
		return null;
	}
	,buildFilter: function(out) {
		var _gthis = this;
		var knownRange = this.getKnownRange(this.table.keyboards);
		if(knownRange != null) {
			tools_HtmlTools.appendDivTextNode(out,"Available range: " + type_NumRange.toString(knownRange));
		}
		var _g = 0;
		while(_g < 2) {
			var step = _g++;
			var isMin = [step == 0];
			var startVal = isMin[0] ? _gthis.filterMin : _gthis.filterMax;
			var fd = [window.document.createElement("input")];
			fd[0].type = "number";
			fd[0].disabled = startVal == null;
			if(startVal != null) {
				fd[0].value = "" + Std.string(startVal);
			}
			var setValue = [(function(isMin) {
				return function(val) {
					var old = isMin[0] ? _gthis.filterMin : _gthis.filterMax;
					if(old != val) {
						if(isMin[0]) {
							_gthis.filterMin = val;
						} else {
							_gthis.filterMax = val;
						}
						_gthis.table.updateFilters();
					}
				};
			})(isMin)];
			var setFdValue = [(function(setValue,fd) {
				return function() {
					var val = _gthis.parseFilterValue(fd[0].value);
					tools_HtmlTools.setAttributeFlag(fd[0],"invalid",val == null);
					setValue[0](val);
				};
			})(setValue,fd)];
			fd[0].onchange = (function(setFdValue) {
				return function(_) {
					setFdValue[0]();
				};
			})(setFdValue);
			fd[0].onkeydown = (function(setFdValue) {
				return function(_) {
					setFdValue[0]();
				};
			})(setFdValue);
			fd[0].onkeyup = (function(setFdValue) {
				return function(_) {
					setFdValue[0]();
				};
			})(setFdValue);
			var cb = [tools_HtmlTools.createCheckboxElement(window.document)];
			cb[0].checked = startVal != null;
			cb[0].onchange = (function(cb,setFdValue,setValue,fd) {
				return function(_) {
					fd[0].disabled = !cb[0].checked;
					if(cb[0].checked) {
						setFdValue[0]();
					} else {
						setValue[0](null);
					}
				};
			})(cb,setFdValue,setValue,fd);
			var lb = window.document.createElement("label");
			lb.appendChild(cb[0]);
			lb.appendChild(window.document.createTextNode((isMin[0] ? "min" : "max") + ": "));
			var div = window.document.createElement("div");
			div.appendChild(lb);
			div.appendChild(fd[0]);
			out.appendChild(div);
		}
		if(this.filterIncludeNullLabel != null) {
			var cb1 = tools_HtmlTools.createCheckboxElement(window.document);
			cb1.checked = this.filterIncludeNull;
			cb1.onchange = function(_) {
				_gthis.filterIncludeNull = cb1.checked;
				_gthis.table.updateFilters();
			};
			var lb = window.document.createElement("label");
			lb.appendChild(cb1);
			var text = this.filterIncludeNullLabel;
			lb.appendChild(window.document.createTextNode(text));
			var div = window.document.createElement("div");
			div.appendChild(lb);
			out.appendChild(div);
		}
	}
});
var table_FancyTableIntColumnBase = function(name) {
	table_FancyTableNumberColumnBase.call(this,name);
};
table_FancyTableIntColumnBase.__name__ = true;
table_FancyTableIntColumnBase.__super__ = table_FancyTableNumberColumnBase;
table_FancyTableIntColumnBase.prototype = $extend(table_FancyTableNumberColumnBase.prototype,{
	parseFilterValue: function(val) {
		if(val == null) {
			return null;
		}
		return Std.parseInt(val);
	}
});
var table_FancyTableIntColumn = function(name,getter) {
	this.defaultValue = 0;
	table_FancyTableIntColumnBase.call(this,name);
	this.getter = getter;
};
table_FancyTableIntColumn.__name__ = true;
table_FancyTableIntColumn.__super__ = table_FancyTableIntColumnBase;
table_FancyTableIntColumn.prototype = $extend(table_FancyTableIntColumnBase.prototype,{
	getKnownRange: function(keyboards) {
		var min = null;
		var max = null;
		var _g = 0;
		while(_g < keyboards.length) {
			var keyboard = keyboards[_g];
			++_g;
			var val = this.getter(keyboard);
			if(val != null) {
				if(min == null || val < min) {
					min = val;
				}
				if(max == null || val > max) {
					max = val;
				}
			}
		}
		if(min != null) {
			return { min : min, max : max};
		} else {
			return null;
		}
	}
	,buildValue: function(out,kb) {
		var val = this.getter(kb);
		var text = val != null ? "" + val : this.nullCaption;
		out.appendChild(window.document.createTextNode(text));
	}
	,matchesFilter: function(kb) {
		var val = this.getter(kb);
		if(val == null) {
			if(this.filterIncludeNull) {
				return true;
			}
			val = this.defaultValue;
		}
		if(this.filterMin != null && val < this.filterMin) {
			return false;
		}
		if(this.filterMax != null && val > this.filterMax) {
			return false;
		}
		return true;
	}
	,compareKeyboards: function(a,b,ascending) {
		var tmp = this.getter(a);
		var av = tmp != null ? tmp : this.defaultValue;
		var tmp = this.getter(b);
		var bv = tmp != null ? tmp : this.defaultValue;
		if(ascending) {
			return av - bv;
		}
		return bv - av;
	}
});
var table_FancyTableIntListColumn = function(name,getter) {
	this.defaultValue = [];
	table_FancyTableIntColumnBase.call(this,name);
	this.getter = getter;
};
table_FancyTableIntListColumn.__name__ = true;
table_FancyTableIntListColumn.__super__ = table_FancyTableIntColumnBase;
table_FancyTableIntListColumn.prototype = $extend(table_FancyTableIntColumnBase.prototype,{
	getKnownRange: function(keyboards) {
		var min = null;
		var max = null;
		var _g = 0;
		while(_g < keyboards.length) {
			var keyboard = keyboards[_g];
			++_g;
			var list = this.getter(keyboard);
			if(list != null) {
				var _g1 = 0;
				var _g2 = list;
				while(_g1 < _g2.length) {
					var val = _g2[_g1];
					++_g1;
					if(min == null || val < min) {
						min = val;
					}
					if(max == null || val > max) {
						max = val;
					}
				}
			}
		}
		if(min != null) {
			return { min : min, max : max};
		} else {
			return null;
		}
	}
	,buildValue: function(out,kb) {
		var val = this.getter(kb);
		var text = val != null && val.length > 0 ? val.join(" ") : this.nullCaption;
		out.appendChild(window.document.createTextNode(text));
	}
	,matchesFilter: function(kb) {
		var vals = this.getter(kb);
		if(vals == null) {
			if(this.filterIncludeNull) {
				return true;
			}
			vals = this.defaultValue;
		}
		var _g = 0;
		var _g1 = vals;
		while(_g < _g1.length) {
			var val = _g1[_g];
			++_g;
			if(this.filterMin != null && val < this.filterMin) {
				continue;
			}
			if(this.filterMax != null && val > this.filterMax) {
				continue;
			}
			return true;
		}
		if(this.filterMin == null) {
			return this.filterMax == null;
		} else {
			return false;
		}
	}
	,compareKeyboards: function(a,b,ascending) {
		var tmp = this.getter(a);
		var al = tmp != null ? tmp : [];
		var tmp = this.getter(b);
		var bl = tmp != null ? tmp : [];
		var am = null;
		var bm = null;
		if(ascending) {
			var _g = 0;
			while(_g < al.length) {
				var v = al[_g];
				++_g;
				if(am == null || v < am) {
					am = v;
				}
			}
			var _g = 0;
			while(_g < bl.length) {
				var v = bl[_g];
				++_g;
				if(bm == null || v < bm) {
					bm = v;
				}
			}
			if(am == null) {
				if(bm == null) {
					return 0;
				} else {
					return -1;
				}
			}
			if(bm == null) {
				return 1;
			}
			return am - bm;
		} else {
			var _g = 0;
			while(_g < al.length) {
				var v = al[_g];
				++_g;
				if(am == null || v > am) {
					am = v;
				}
			}
			var _g = 0;
			while(_g < bl.length) {
				var v = bl[_g];
				++_g;
				if(bm == null || v > bm) {
					bm = v;
				}
			}
			if(am == null) {
				if(bm == null) {
					return 0;
				} else {
					return 1;
				}
			}
			if(bm == null) {
				return -1;
			}
			return bm - am;
		}
	}
});
var table_FancyTableIntRangeColumn = function(name,getter) {
	this.defaultValue = { min : 0, max : 0};
	table_FancyTableIntColumnBase.call(this,name);
	this.getter = getter;
};
table_FancyTableIntRangeColumn.__name__ = true;
table_FancyTableIntRangeColumn.__super__ = table_FancyTableIntColumnBase;
table_FancyTableIntRangeColumn.prototype = $extend(table_FancyTableIntColumnBase.prototype,{
	getKnownRange: function(keyboards) {
		var min = null;
		var max = null;
		var _g = 0;
		while(_g < keyboards.length) {
			var keyboard = keyboards[_g];
			++_g;
			var range = this.getter(keyboard);
			if(range != null) {
				if(min == null || range.min < min) {
					min = range.min;
				}
				if(max == null || range.max > max) {
					max = range.max;
				}
			}
		}
		if(min != null) {
			return { min : min, max : max};
		} else {
			return null;
		}
	}
	,buildValue: function(out,kb) {
		var range = this.getter(kb);
		var text = range != null ? type_NumRange.toString(range) : this.nullCaption;
		out.appendChild(window.document.createTextNode(text));
	}
	,matchesFilter: function(kb) {
		var tmp = this.getter(kb);
		var val = tmp != null ? tmp : this.defaultValue;
		if(this.filterMin != null && val.max < this.filterMin) {
			return false;
		}
		if(this.filterMax != null && val.min > this.filterMax) {
			return false;
		}
		return true;
	}
	,compareKeyboards: function(a,b,ascending) {
		var tmp = this.getter(a);
		var ar = tmp != null ? tmp : this.defaultValue;
		var tmp = this.getter(b);
		var br = tmp != null ? tmp : this.defaultValue;
		if(ascending) {
			return ar.min - br.min;
		} else {
			return br.max - ar.max;
		}
	}
});
var table_FancyTableFloatColumn = function(name,getter) {
	this.defaultValue = 0.;
	table_FancyTableNumberColumnBase.call(this,name);
	this.getter = getter;
};
table_FancyTableFloatColumn.__name__ = true;
table_FancyTableFloatColumn.__super__ = table_FancyTableNumberColumnBase;
table_FancyTableFloatColumn.prototype = $extend(table_FancyTableNumberColumnBase.prototype,{
	parseFilterValue: function(val) {
		if(val == null) {
			return null;
		}
		val = StringTools.replace(val,",",".");
		var f = parseFloat(val);
		if(isNaN(f)) {
			return null;
		}
		return f;
	}
	,getKnownRange: function(keyboards) {
		var min = null;
		var max = null;
		var _g = 0;
		while(_g < keyboards.length) {
			var keyboard = keyboards[_g];
			++_g;
			var val = this.getter(keyboard);
			if(val != null) {
				if(min == null || val < min) {
					min = val;
				}
				if(max == null || val > max) {
					max = val;
				}
			}
		}
		if(min != null) {
			return { min : min, max : max};
		} else {
			return null;
		}
	}
	,buildValue: function(out,kb) {
		var val = this.getter(kb);
		var text = val != null ? "" + val : this.nullCaption;
		out.appendChild(window.document.createTextNode(text));
	}
	,matchesFilter: function(kb) {
		var tmp = this.getter(kb);
		var val = tmp != null ? tmp : this.defaultValue;
		if(this.filterMin != null && val < this.filterMin) {
			return false;
		}
		if(this.filterMax != null && val > this.filterMax) {
			return false;
		}
		return true;
	}
	,compareKeyboards: function(a,b,ascending) {
		var tmp = this.getter(a);
		var av = tmp != null ? tmp : this.defaultValue;
		var tmp = this.getter(b);
		var bv = tmp != null ? tmp : this.defaultValue;
		var sign = av < bv ? -1 : av > bv ? 1 : 0;
		if(!ascending) {
			sign = -sign;
		}
		return sign;
	}
});
var table_FancyTableLinkListColumn = function(name,getter) {
	this.defaultValue = "";
	table_FancyTableColumn.call(this,name);
	this.getter = getter;
};
table_FancyTableLinkListColumn.__name__ = true;
table_FancyTableLinkListColumn.__super__ = table_FancyTableColumn;
table_FancyTableLinkListColumn.prototype = $extend(table_FancyTableColumn.prototype,{
	matchesFilter: function(kb) {
		var lines = this.getter(kb);
		if(lines != null) {
			return lines.length != 0;
		} else {
			return false;
		}
	}
	,buildValue: function(out,kb) {
		var lines = this.getter(kb);
		if(!(lines == null || lines.length == 0)) {
			if(lines.length == 1) {
				var link = window.document.createElement("a");
				link.appendChild(window.document.createTextNode("➜"));
				link.href = lines[0];
				out.appendChild(link);
			} else {
				var _g_current = 0;
				var _g_array = lines;
				while(_g_current < _g_array.length) {
					var _g_value = _g_array[_g_current];
					var _g_key = _g_current++;
					var i = _g_key;
					var lines = _g_value;
				}
			}
		}
	}
});
var table_FancyTableNameColumn = function(name,getter) {
	table_FancyTableColumn.call(this,name);
	this.getter = getter;
	this.canFilter = false;
};
table_FancyTableNameColumn.__name__ = true;
table_FancyTableNameColumn.__super__ = table_FancyTableColumn;
table_FancyTableNameColumn.prototype = $extend(table_FancyTableColumn.prototype,{
	buildValue: function(out,kb) {
		if(kb.img != null) {
			var src = "img/" + kb.img;
			var link = window.document.createElement("a");
			var text = this.getter(kb);
			link.appendChild(window.document.createTextNode(text));
			link.href = src;
			link.onclick = function() {
				return false;
			};
			out.appendChild(link);
			var this1 = { };
			this1["theme"] = "translucent";
			var opts = this1;
			opts["trigger"] = "click";
			opts["interactive"] = true;
			opts["maxWidth"] = 640;
			var v = function(_) {
				var img = window.document.createElement("img");
				img.src = src;
				img.className = "tippy-photo";
				return img;
			};
			opts["content"] = v;
			Tippy(link,opts);
		} else {
			var text = this.getter(kb);
			out.appendChild(window.document.createTextNode(text));
		}
	}
});
var table_FancyTableRow = function(kb) {
	this.cells = [];
	this.keyboard = kb;
	this.element = window.document.createElement("tr");
};
table_FancyTableRow.__name__ = true;
var table_FancyTableCellBase = function(col) {
	this.column = col;
};
table_FancyTableCellBase.__name__ = true;
var table_FancyTableCell = function(col) {
	table_FancyTableCellBase.call(this,col);
	this.element = window.document.createElement("td");
};
table_FancyTableCell.__name__ = true;
table_FancyTableCell.__super__ = table_FancyTableCellBase;
table_FancyTableCell.prototype = $extend(table_FancyTableCellBase.prototype,{
});
var table_FancyTableHeaderCell = function(col) {
	table_FancyTableCellBase.call(this,col);
	this.element = window.document.createElement("th");
};
table_FancyTableHeaderCell.__name__ = true;
table_FancyTableHeaderCell.__super__ = table_FancyTableCellBase;
table_FancyTableHeaderCell.prototype = $extend(table_FancyTableCellBase.prototype,{
});
var tools_FancyTableMacro = function() { };
tools_FancyTableMacro.__name__ = true;
var tools_HtmlTools = function() { };
tools_HtmlTools.__name__ = true;
tools_HtmlTools.getElementByIdAuto = function(doc,id,c) {
	return doc.getElementById(id);
};
tools_HtmlTools.asElement = function(el) {
	return el;
};
tools_HtmlTools.querySelectorEls = function(el,selectors) {
	return el.querySelectorAll(selectors);
};
tools_HtmlTools.querySelectorAllAuto = function(el,selectors,c) {
	return el.querySelectorAll(selectors);
};
tools_HtmlTools.querySelectorAllAutoArr = function(el,selectors,c) {
	var elist = el.querySelectorAll(selectors);
	var _g = [];
	var _g1 = 0;
	while(_g1 < elist.length) {
		var el = elist[_g1];
		++_g1;
		_g.push(el);
	}
	return _g;
};
tools_HtmlTools.querySelectorAuto = function(el,selectors,c) {
	return el.querySelector(selectors);
};
tools_HtmlTools.appendTextNode = function(e,text) {
	e.appendChild(window.document.createTextNode(text));
};
tools_HtmlTools.appendLineBreak = function(e) {
	e.appendChild(window.document.createElement("br"));
};
tools_HtmlTools.appendDivTextNode = function(e,text) {
	var div = window.document.createElement("div");
	div.appendChild(window.document.createTextNode(text));
	e.appendChild(div);
	return div;
};
tools_HtmlTools.addFieldChangeEventListener = function(e,f) {
	e.addEventListener("change",f);
	e.addEventListener("keydown",function(e) {
		window.setTimeout(function() {
			f(e);
		});
	});
	e.addEventListener("keyup",f);
};
tools_HtmlTools.createFilePicker = function(accept,fn) {
	var form = window.document.createElement("form");
	form.classList.add("hidden");
	var picker = window.document.createElement("input");
	picker.type = "file";
	picker.accept = accept;
	form.appendChild(picker);
	var reset = function() {
		form.reset();
	};
	picker.onchange = function(_) {
		var _g = 0;
		var _g1 = picker.files;
		while(_g < _g1.length) {
			var file = _g1[_g];
			++_g;
			fn(file,reset);
			break;
		}
	};
	window.document.body.appendChild(form);
	return picker;
};
tools_HtmlTools.createJsonPicker = function(fn) {
	return tools_HtmlTools.createFilePicker(".json",function(file,then) {
		var reader = new FileReader();
		reader.onload = function() {
			var text = reader.result;
			var json;
			try {
				json = JSON.parse(text);
			} catch( _g ) {
				var x = haxe_Exception.caught(_g).unwrap();
				window.alert("Invalid JSON: " + Std.string(x));
				return;
			}
			try {
				fn(json);
			} catch( _g ) {
				var x = haxe_Exception.caught(_g).unwrap();
				window.alert("Load error: " + Std.string(x));
			}
		};
		reader.onloadend = function() {
			then();
		};
		reader.readAsText(file);
	});
};
tools_HtmlTools.createCheckboxElement = function(doc) {
	var cb = doc.createElement("input");
	cb.type = "checkbox";
	return cb;
};
tools_HtmlTools.saveAs = function(data,name) {
	window['saveAs'](data,name);
};
tools_HtmlTools.saveJsonAs = function(data,name) {
	var text = JSON.stringify(data,null,"\t");
	var blob = new Blob([text]);
	window['saveAs'](blob,name);
};
tools_HtmlTools.setAttributeFlag = function(el,attr,val) {
	if(val) {
		if(!el.hasAttribute(attr)) {
			el.setAttribute(attr,"");
		}
	} else if(el.hasAttribute(attr)) {
		el.removeAttribute(attr);
	}
};
tools_HtmlTools.setTokenFlag = function(tl,name,val) {
	if(tl.contains(name) != val) {
		tl.toggle(name);
	}
};
tools_HtmlTools.setDisplayFlag = function(el,visible) {
	el.style.display = visible ? "" : "none";
};
var type_Assembly = $hxEnums["type.Assembly"] = { __ename__:true,__constructs__:null
	,Unspecified: {_hx_name:"Unspecified",_hx_index:0,__enum__:"type.Assembly",toString:$estr}
	,Handwired: {_hx_name:"Handwired",_hx_index:1,__enum__:"type.Assembly",toString:$estr}
};
type_Assembly.__constructs__ = [type_Assembly.Unspecified,type_Assembly.Handwired];
var type_Connection = $hxEnums["type.Connection"] = { __ename__:true,__constructs__:null
	,Wired: {_hx_name:"Wired",_hx_index:0,__enum__:"type.Connection",toString:$estr}
	,Bluetooth: {_hx_name:"Bluetooth",_hx_index:1,__enum__:"type.Connection",toString:$estr}
	,Proprietary: {_hx_name:"Proprietary",_hx_index:2,__enum__:"type.Connection",toString:$estr}
};
type_Connection.__constructs__ = [type_Connection.Wired,type_Connection.Bluetooth,type_Connection.Proprietary];
var type_Firmware = $hxEnums["type.Firmware"] = { __ename__:true,__constructs__:null
	,Unknown: {_hx_name:"Unknown",_hx_index:0,__enum__:"type.Firmware",toString:$estr}
	,QMK: {_hx_name:"QMK",_hx_index:1,__enum__:"type.Firmware",toString:$estr}
	,ZMK: {_hx_name:"ZMK",_hx_index:2,__enum__:"type.Firmware",toString:$estr}
};
type_Firmware.__constructs__ = [type_Firmware.Unknown,type_Firmware.QMK,type_Firmware.ZMK];
var type_HotSwap = {};
type_HotSwap.fromBool = function(b) {
	if(b == null) {
		return type_HotSwapBase.Unspecified;
	} else if(b) {
		return type_HotSwapBase.Yes;
	} else {
		return type_HotSwapBase.No;
	}
};
var type_HotSwapBase = $hxEnums["type.HotSwapBase"] = { __ename__:true,__constructs__:null
	,Unspecified: {_hx_name:"Unspecified",_hx_index:0,__enum__:"type.HotSwapBase",toString:$estr}
	,No: {_hx_name:"No",_hx_index:1,__enum__:"type.HotSwapBase",toString:$estr}
	,Yes: {_hx_name:"Yes",_hx_index:2,__enum__:"type.HotSwapBase",toString:$estr}
};
type_HotSwapBase.__constructs__ = [type_HotSwapBase.Unspecified,type_HotSwapBase.No,type_HotSwapBase.Yes];
var type_NumRange = {};
type_NumRange._new = function(min,max) {
	return { min : min, max : max};
};
type_NumRange.fromInt = function(val) {
	return { min : val, max : val};
};
type_NumRange.fromArray = function(arr) {
	if(arr.length != 2) {
		throw haxe_Exception.thrown("Expected [min, max]");
	}
	return { min : arr[0], max : arr[1]};
};
type_NumRange.toString = function(this1) {
	if(this1 == null) {
		return "";
	}
	if(this1.min == this1.max) {
		return "" + Std.string(this1.min);
	}
	return Std.string(this1.min) + ".." + Std.string(this1.max);
};
var type_KeySpacing = $hxEnums["type.KeySpacing"] = { __ename__:true,__constructs__:null
	,Unknown: {_hx_name:"Unknown",_hx_index:0,__enum__:"type.KeySpacing",toString:$estr}
	,MX: {_hx_name:"MX",_hx_index:1,__enum__:"type.KeySpacing",toString:$estr}
	,Choc: {_hx_name:"Choc",_hx_index:2,__enum__:"type.KeySpacing",toString:$estr}
	,CFX: {_hx_name:"CFX",_hx_index:3,__enum__:"type.KeySpacing",toString:$estr}
};
type_KeySpacing.__constructs__ = [type_KeySpacing.Unknown,type_KeySpacing.MX,type_KeySpacing.Choc,type_KeySpacing.CFX];
var type_NavCluster = $hxEnums["type.NavCluster"] = { __ename__:true,__constructs__:null
	,None: {_hx_name:"None",_hx_index:0,__enum__:"type.NavCluster",toString:$estr}
	,Arrows: {_hx_name:"Arrows",_hx_index:1,__enum__:"type.NavCluster",toString:$estr}
	,Full: {_hx_name:"Full",_hx_index:2,__enum__:"type.NavCluster",toString:$estr}
};
type_NavCluster.__constructs__ = [type_NavCluster.None,type_NavCluster.Arrows,type_NavCluster.Full];
var type_Software = $hxEnums["type.Software"] = { __ename__:true,__constructs__:null
	,Unknown: {_hx_name:"Unknown",_hx_index:0,__enum__:"type.Software",toString:$estr}
	,VIA: {_hx_name:"VIA",_hx_index:1,__enum__:"type.Software",toString:$estr}
	,Vial: {_hx_name:"Vial",_hx_index:2,__enum__:"type.Software",toString:$estr}
	,Custom: {_hx_name:"Custom",_hx_index:3,__enum__:"type.Software",toString:$estr}
};
type_Software.__constructs__ = [type_Software.Unknown,type_Software.VIA,type_Software.Vial,type_Software.Custom];
var type_StaggerType = $hxEnums["type.StaggerType"] = { __ename__:true,__constructs__:null
	,Column: {_hx_name:"Column",_hx_index:0,__enum__:"type.StaggerType",toString:$estr}
	,Ortho: {_hx_name:"Ortho",_hx_index:1,__enum__:"type.StaggerType",toString:$estr}
};
type_StaggerType.__constructs__ = [type_StaggerType.Column,type_StaggerType.Ortho];
var type_SwitchKind = $hxEnums["type.SwitchKind"] = { __ename__:true,__constructs__:null
	,Linear: {_hx_name:"Linear",_hx_index:0,__enum__:"type.SwitchKind",toString:$estr}
	,Tactile: {_hx_name:"Tactile",_hx_index:1,__enum__:"type.SwitchKind",toString:$estr}
	,Clicky: {_hx_name:"Clicky",_hx_index:2,__enum__:"type.SwitchKind",toString:$estr}
	,Optic: {_hx_name:"Optic",_hx_index:3,__enum__:"type.SwitchKind",toString:$estr}
	,Other: {_hx_name:"Other",_hx_index:4,__enum__:"type.SwitchKind",toString:$estr}
};
type_SwitchKind.__constructs__ = [type_SwitchKind.Linear,type_SwitchKind.Tactile,type_SwitchKind.Clicky,type_SwitchKind.Optic,type_SwitchKind.Other];
var type_SwitchProfile = $hxEnums["type.SwitchProfile"] = { __ename__:true,__constructs__:null
	,Unknown: {_hx_name:"Unknown",_hx_index:0,__enum__:"type.SwitchProfile",toString:$estr}
	,MX: {_hx_name:"MX",_hx_index:1,__enum__:"type.SwitchProfile",toString:$estr}
	,Choc: {_hx_name:"Choc",_hx_index:2,__enum__:"type.SwitchProfile",toString:$estr}
	,GateronLP: {_hx_name:"GateronLP",_hx_index:3,__enum__:"type.SwitchProfile",toString:$estr}
	,Other: {_hx_name:"Other",_hx_index:4,__enum__:"type.SwitchProfile",toString:$estr}
};
type_SwitchProfile.__constructs__ = [type_SwitchProfile.Unknown,type_SwitchProfile.MX,type_SwitchProfile.Choc,type_SwitchProfile.GateronLP,type_SwitchProfile.Other];
var type_ValList = {};
type_ValList.get_length = function(this1) {
	return this1.length;
};
type_ValList.aget = function(this1,i) {
	return this1[i];
};
type_ValList.aset = function(this1,i,v) {
	return this1[i] = v;
};
type_ValList.fromValue = function(val) {
	return [val];
};
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
String.__name__ = true;
Array.__name__ = true;
var Tippy = window["tippy"];
js_Boot.__toStr = ({ }).toString;
Main.main();
})({});
